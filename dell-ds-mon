#!/usr/bin/env python

import subprocess
import csv
import pprint

host = "rdsf-md1-ph.mgmt.acrc.priv"
hostmgmt = "rdsf-md1a-ph.mgmt.acrc.priv"
interval = 5

def write_metric(plugin_instance,type_instance,value):
    print "PUTVAL %s/%s/%s interval=%s N:%s" % (host,plugin_instance,type_instance,interval,value)

def get_metrics():
    cmd = subprocess.Popen(["/bin/SMcli", hostmgmt, "-S", "-quick",
                            "-c", "set session performanceMonitorInterval=%s; show allLogicalDrives performanceStats;"%interval], 
                             stdout=subprocess.PIPE)
    reader = csv.reader(cmd.stdout, delimiter=',', quotechar='"')
    cmd.wait()

    # Ignore first 3 lines
    reader.next()
    reader.next()
    reader.next()

    # Get headers
    headers = reader.next()

    reader.next()
    reader.next()
    reader.next()


    for line in reader:
        lineiter = iter(line)
        ld = lineiter.next().replace("Logical Drive ","")
        lineiter.next() # Ignore Total IOs
        write_metric("read-percent", ld, lineiter.next())
        write_metric("primary-read-cache-hit-percent", ld, lineiter.next())
        write_metric("primary-write-cache-hit-percent", ld, lineiter.next())
        lineiter.next() # Ignore SSD read cache hit
        write_metric("mb-per-sec", ld, lineiter.next())
        lineiter.next() 
        write_metric("iops", ld, lineiter.next())
        lineiter.next()
        lineiter.next()
        lineiter.next()
        lineiter.next()
        lineiter.next()
        write_metric("io-latency", ld, lineiter.next())

while True:
    get_metrics()
