#!/usr/bin/env python
import csv
import pprint
import subprocess

host = "rdsf-md1-mv.mgmt.acrc.priv"
hostmgmt = "rdsf-md1a-mv.mgmt.acrc.priv"
interval = 5

def write_metric(plugin_instance,type_instance,value):
    print "PUTVAL %s/disk-%s/%s interval=%s N:%s" % (host,plugin_instance,type_instance,interval,value)

def get_metrics():
    cmd = subprocess.Popen(["/bin/SMcli", hostmgmt, "-S", "-quick",
                            "-c", "set session performanceMonitorInterval=%s; show allVirtualDisks performanceStats;"%interval], 
                             stdout=subprocess.PIPE)
    reader = csv.reader(cmd.stdout, delimiter=',', quotechar='"')
    cmd.wait()

    # Ignore first 3 lines
    reader.next()
    reader.next()
    reader.next()

    # Get headers
    headers = reader.next()

    reader.next()
    reader.next()
    reader.next()


    for line in reader:
        lineiter = iter(line)
        ld = lineiter.next().replace("Virtual Disk ","")
        lineiter.next() # Ignore Total IOs

        write_metric(ld, "percent-read_ratio", lineiter.next())
        write_metric(ld, "percent-primary_read_cache_hit", lineiter.next())
        write_metric(ld, "percent-primary_write_cache_hit", lineiter.next())
        lineiter.next() # Ignore SSD read cache hit
        write_metric(ld, "gauge-throughput" , lineiter.next())
        lineiter.next() 
        write_metric(ld, "gauge-iops", lineiter.next())
        lineiter.next()
        lineiter.next()
        lineiter.next()
        lineiter.next()
        lineiter.next()
        write_metric(ld, "latency", lineiter.next())

while True:
    get_metrics()
