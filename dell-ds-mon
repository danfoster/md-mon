#!/usr/bin/env python
import csv
import pprint
import subprocess
import sys

interval = 30

def write_metric(plugin_instance,type_instance,value, host):
    print "PUTVAL %s/disk-%s/%s interval=%s N:%s" % (host,plugin_instance,type_instance,interval,value)

def write_metrics( metrics, host):
    for ld in metrics:
        for key,value in metrics[ld].iteritems():
            write_metric(ld, key, value, host)

def get_metrics(host,controllera,controllerb):
        metrics = {}

        #controller A
        cmd_a = subprocess.Popen(["/bin/SMcli", controllera, "-S", "-quick",
                                "-c", "set session performanceMonitorInterval=%s; show allVirtualDisks performanceStats;"%interval], 
                                 stdout=subprocess.PIPE)
        reader_a = csv.reader(cmd_a.stdout, delimiter=',', quotechar='"')

        #controller B
        cmd_b = subprocess.Popen(["/bin/SMcli", controllerb, "-S", "-quick",
                                "-c", "set session performanceMonitorInterval=%s; show allVirtualDisks performanceStats;"%interval], 
                                 stdout=subprocess.PIPE)
        reader_b = csv.reader(cmd_b.stdout, delimiter=',', quotechar='"')
        
        #controller A
        cmd_a.wait()
        for r in range(0,7):
            reader_a.next()
        for line in reader_a:
            lineiter = iter(line)
            ld = lineiter.next().replace("Virtual Disk ","")
	    metrics[ld] = {}
            lineiter.next() # Ignore Total IOs

            metrics[ld]["percent-read_ratio"] = float(lineiter.next())
            metrics[ld]["percent-primary_read_cache_hit"] = float(lineiter.next())
            metrics[ld]["percent-primary_write_cache_hit"] = float(lineiter.next())
            lineiter.next() # Ignore SSD read cache hit
            metrics[ld]["gauge-throughput"] = float(lineiter.next())
            lineiter.next() 
            metrics[ld]["gauge-iops"] = float(lineiter.next())
            lineiter.next()
            lineiter.next()
            lineiter.next()
            lineiter.next()
            lineiter.next()
            metrics[ld]["latency"] = float(lineiter.next())

        #controller B
        cmd_b.wait()
        for r in range(0,7):
            reader_b.next()
        for line in reader_b:
            lineiter = iter(line)
            ld = lineiter.next().replace("Virtual Disk ","")
            lineiter.next() # Ignore Total IOs

            metrics[ld]["percent-read_ratio"] += float(lineiter.next())
            metrics[ld]["percent-primary_read_cache_hit"] += float(lineiter.next())
            metrics[ld]["percent-primary_write_cache_hit"] += float(lineiter.next())
            lineiter.next() # Ignore SSD read cache hit
            metrics[ld]["gauge-throughput"] += float(lineiter.next())
            lineiter.next() 
            metrics[ld]["gauge-iops"] += float(lineiter.next())
            lineiter.next()
            lineiter.next()
            lineiter.next()
            lineiter.next()
            lineiter.next()
            metrics[ld]["latency"] += float(lineiter.next())

	write_metrics(metrics,host)

while True:
        get_metrics(sys.argv[1],sys.argv[2],sys.argv[3])
